// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// NewGetCertificatesCertificateIDVhostsParams creates a new GetCertificatesCertificateIDVhostsParams object
// with the default values initialized.
func NewGetCertificatesCertificateIDVhostsParams() *GetCertificatesCertificateIDVhostsParams {
	var ()
	return &GetCertificatesCertificateIDVhostsParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetCertificatesCertificateIDVhostsParamsWithTimeout creates a new GetCertificatesCertificateIDVhostsParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetCertificatesCertificateIDVhostsParamsWithTimeout(timeout time.Duration) *GetCertificatesCertificateIDVhostsParams {
	var ()
	return &GetCertificatesCertificateIDVhostsParams{

		timeout: timeout,
	}
}

// NewGetCertificatesCertificateIDVhostsParamsWithContext creates a new GetCertificatesCertificateIDVhostsParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetCertificatesCertificateIDVhostsParamsWithContext(ctx context.Context) *GetCertificatesCertificateIDVhostsParams {
	var ()
	return &GetCertificatesCertificateIDVhostsParams{

		Context: ctx,
	}
}

// NewGetCertificatesCertificateIDVhostsParamsWithHTTPClient creates a new GetCertificatesCertificateIDVhostsParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetCertificatesCertificateIDVhostsParamsWithHTTPClient(client *http.Client) *GetCertificatesCertificateIDVhostsParams {
	var ()
	return &GetCertificatesCertificateIDVhostsParams{
		HTTPClient: client,
	}
}

/*GetCertificatesCertificateIDVhostsParams contains all the parameters to send to the API endpoint
for the get certificates certificate ID vhosts operation typically these are written to a http.Request
*/
type GetCertificatesCertificateIDVhostsParams struct {

	/*CertificateID
	  certificate_id

	*/
	CertificateID int64
	/*Page
	  current page of results for pagination

	*/
	Page *int64

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get certificates certificate ID vhosts params
func (o *GetCertificatesCertificateIDVhostsParams) WithTimeout(timeout time.Duration) *GetCertificatesCertificateIDVhostsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get certificates certificate ID vhosts params
func (o *GetCertificatesCertificateIDVhostsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get certificates certificate ID vhosts params
func (o *GetCertificatesCertificateIDVhostsParams) WithContext(ctx context.Context) *GetCertificatesCertificateIDVhostsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get certificates certificate ID vhosts params
func (o *GetCertificatesCertificateIDVhostsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get certificates certificate ID vhosts params
func (o *GetCertificatesCertificateIDVhostsParams) WithHTTPClient(client *http.Client) *GetCertificatesCertificateIDVhostsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get certificates certificate ID vhosts params
func (o *GetCertificatesCertificateIDVhostsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithCertificateID adds the certificateID to the get certificates certificate ID vhosts params
func (o *GetCertificatesCertificateIDVhostsParams) WithCertificateID(certificateID int64) *GetCertificatesCertificateIDVhostsParams {
	o.SetCertificateID(certificateID)
	return o
}

// SetCertificateID adds the certificateId to the get certificates certificate ID vhosts params
func (o *GetCertificatesCertificateIDVhostsParams) SetCertificateID(certificateID int64) {
	o.CertificateID = certificateID
}

// WithPage adds the page to the get certificates certificate ID vhosts params
func (o *GetCertificatesCertificateIDVhostsParams) WithPage(page *int64) *GetCertificatesCertificateIDVhostsParams {
	o.SetPage(page)
	return o
}

// SetPage adds the page to the get certificates certificate ID vhosts params
func (o *GetCertificatesCertificateIDVhostsParams) SetPage(page *int64) {
	o.Page = page
}

// WriteToRequest writes these params to a swagger request
func (o *GetCertificatesCertificateIDVhostsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param certificate_id
	if err := r.SetPathParam("certificate_id", swag.FormatInt64(o.CertificateID)); err != nil {
		return err
	}

	if o.Page != nil {

		// query param page
		var qrPage int64
		if o.Page != nil {
			qrPage = *o.Page
		}
		qPage := swag.FormatInt64(qrPage)
		if qPage != "" {
			if err := r.SetQueryParam("page", qPage); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
